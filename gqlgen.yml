# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/schemas/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
federation:
  filename: graph/generated/federation.go
  package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph
  type: Resolver

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/oasis-prime/oas-platform-hotels-master-api/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  Hotel:
    fields:
      images:
        resolver: true
      interestPoints:
        resolver: true
      issues:
        resolver: true
      facilities:
        resolver: true
      rooms:
        resolver: true
      phones:
        resolver: true
      city:
        resolver: true
      address:
        resolver: true
      description:
        resolver: true
      name:
        resolver: true
      coordinates:
        resolver: true
  Rooms:
    fields:
      roomStays:
        resolver: true
      roomFacilities:
        resolver: true
      roomImages:
        resolver: true
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.Int
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
  Float:
    model:
      - github.com/99designs/gqlgen/graphql.Float
  Boolean:
    model:
      - github.com/99designs/gqlgen/graphql.Boolean
