// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type Address struct {
	Content *string `json:"content"`
	Street  *string `json:"street"`
	Number  *string `json:"number"`
}

type AvailabilityCancellationPolicies struct {
	Amount *string `json:"amount"`
	From   *string `json:"from"`
}

type AvailabilityData struct {
	Hotels       []*Hotels             `json:"hotels"`
	Availability []*AvailabilityHotels `json:"availability"`
}

type AvailabilityFilterInput struct {
	MaxHotels       *int `json:"maxHotels"`
	MaxRooms        *int `json:"maxRooms"`
	MinRate         *int `json:"minRate"`
	MaxRate         *int `json:"maxRate"`
	MaxRatesPerRoom *int `json:"maxRatesPerRoom"`
}

type AvailabilityGeolocationInput struct {
	Latitude  float64 `json:"latitude"`
	Longitude float64 `json:"longitude"`
	Radius    int     `json:"radius"`
}

type AvailabilityHotels struct {
	Code            *int                 `json:"code"`
	Name            *string              `json:"name"`
	CategoryCode    *string              `json:"categoryCode"`
	CategoryName    *string              `json:"categoryName"`
	DestinationCode *string              `json:"destinationCode"`
	DestinationName *string              `json:"destinationName"`
	ZoneCode        *int                 `json:"zoneCode"`
	ZoneName        *string              `json:"zoneName"`
	Latitude        *string              `json:"latitude"`
	Longitude       *string              `json:"longitude"`
	MinRate         *string              `json:"minRate"`
	MaxRate         *string              `json:"maxRate"`
	Currency        *string              `json:"currency"`
	Rooms           []*AvailabilityRooms `json:"rooms"`
}

type AvailabilityInput struct {
	Stay        *AvailabilityStayInput          `json:"stay"`
	Occupancies []*AvailabilityOccupanciesInput `json:"occupancies"`
	Geolocation *AvailabilityGeolocationInput   `json:"geolocation"`
	Language    Language                        `json:"language"`
	Filter      *AvailabilityFilterInput        `json:"filter"`
}

type AvailabilityOccupanciesInput struct {
	Rooms    int `json:"rooms"`
	Adults   int `json:"adults"`
	Children int `json:"children"`
}

type AvailabilityRates struct {
	RateKey              *string                             `json:"rateKey"`
	RateClass            *string                             `json:"rateClass"`
	RateType             *string                             `json:"rateType"`
	Net                  *string                             `json:"net"`
	Discount             *string                             `json:"discount"`
	DiscountPct          *string                             `json:"discountPCT"`
	SellingRate          *string                             `json:"sellingRate"`
	Allotment            *int                                `json:"allotment"`
	PaymentType          *string                             `json:"paymentType"`
	Packaging            *bool                               `json:"packaging"`
	BoardCode            *string                             `json:"boardCode"`
	BoardName            *string                             `json:"boardName"`
	Rooms                *int                                `json:"rooms"`
	Adults               *int                                `json:"adults"`
	Children             *int                                `json:"children"`
	CancellationPolicies []*AvailabilityCancellationPolicies `json:"cancellationPolicies"`
}

type AvailabilityRooms struct {
	Code  *string              `json:"code"`
	Name  *string              `json:"name"`
	Rates []*AvailabilityRates `json:"rates"`
}

type AvailabilityStayInput struct {
	CheckIn  string `json:"checkIn"`
	CheckOut string `json:"checkOut"`
}

type BookingData struct {
	ID *string `json:"id"`
}

type BookingInput struct {
	ID *string `json:"id"`
}

type City struct {
	Content *string `json:"content"`
}

type Coordinates struct {
	Longitude *float64 `json:"longitude"`
	Latitude  *float64 `json:"latitude"`
}

type Description struct {
	Content *string `json:"content"`
}

type Facilities struct {
	FacilityCode      *int  `json:"facilityCode"`
	FacilityGroupCode *int  `json:"facilityGroupCode"`
	Order             *int  `json:"order"`
	Number            *int  `json:"number"`
	Voucher           *bool `json:"voucher"`
}

type Hotels struct {
	Code                  *int              `json:"code"`
	CountryCode           *string           `json:"countryCode"`
	StateCode             *string           `json:"stateCode"`
	DestinationCode       *string           `json:"destinationCode"`
	ZoneCode              *int              `json:"zoneCode"`
	CategoryCode          *string           `json:"categoryCode"`
	CategoryGroupCode     *string           `json:"categoryGroupCode"`
	ChainCode             *string           `json:"chainCode"`
	AccommodationTypeCode *string           `json:"accommodationTypeCode"`
	PostalCode            *string           `json:"postalCode"`
	Email                 *string           `json:"email"`
	Web                   *string           `json:"web"`
	LastUpdate            *string           `json:"lastUpdate"`
	S2c                   *string           `json:"S2C"`
	Ranking               *int              `json:"ranking"`
	Images                []*Images         `json:"images"`
	InterestPoints        []*InterestPoints `json:"interestPoints"`
	Issues                []*Issues         `json:"issues"`
	Facilities            []*Facilities     `json:"facilities"`
	Rooms                 []*Rooms          `json:"rooms"`
	Phones                []*Phones         `json:"phones"`
	City                  *City             `json:"city"`
	Address               *Address          `json:"address"`
	AmenityCodes          []*int            `json:"amenityCodes"`
	SegmentCodes          []*int            `json:"segmentCodes"`
	BoardCodes            []*string         `json:"boardCodes"`
	Coordinates           *Coordinates      `json:"coordinates"`
	Description           *Description      `json:"description"`
	Name                  *Name             `json:"name"`
}

type Images struct {
	ImageTypeCode *string `json:"imageTypeCode"`
	Path          *string `json:"path"`
	Order         *int    `json:"order"`
	VisualOrder   *int    `json:"visualOrder"`
}

type InterestPoints struct {
	FacilityCode      *int    `json:"facilityCode"`
	FacilityGroupCode *int    `json:"facilityGroupCode"`
	Order             *int    `json:"order"`
	PoiName           *string `json:"poiName"`
	Distance          *string `json:"distance"`
}

type Issues struct {
	IssueCode   *string `json:"issueCode"`
	IssueType   *string `json:"issueType"`
	DateFrom    *string `json:"dateFrom"`
	DateTo      *string `json:"dateTo"`
	Order       *int    `json:"order"`
	Alternative *bool   `json:"alternative"`
}

type Name struct {
	Content *string `json:"content"`
}

type Phones struct {
	PhoneNumber *string `json:"phoneNumber"`
	PhoneType   *string `json:"phoneType"`
}

type RoomFacilities struct {
	FacilityCode      *int  `json:"facilityCode"`
	FacilityGroupCode *int  `json:"facilityGroupCode"`
	IndLogic          *bool `json:"indLogic"`
	Number            *int  `json:"number"`
	Voucher           *bool `json:"voucher"`
}

type RoomStayFacilities struct {
	FacilityCode      *int `json:"facilityCode"`
	FacilityGroupCode *int `json:"facilityGroupCode"`
	Number            *int `json:"number"`
}

type RoomStays struct {
	StayType           *string               `json:"stayType"`
	Order              *string               `json:"order"`
	Description        *string               `json:"description"`
	RoomStayFacilities []*RoomStayFacilities `json:"roomStayFacilities"`
}

type Rooms struct {
	RoomCode           *string           `json:"roomCode"`
	IsParentRoom       *bool             `json:"isParentRoom"`
	MinPax             *int              `json:"minPax"`
	MaxPax             *int              `json:"maxPax"`
	MaxAdults          *int              `json:"maxAdults"`
	MaxChildren        *int              `json:"maxChildren"`
	MinAdults          *int              `json:"minAdults"`
	RoomType           *string           `json:"roomType"`
	CharacteristicCode *string           `json:"characteristicCode"`
	RoomStays          []*RoomStays      `json:"roomStays"`
	RoomFacilities     []*RoomFacilities `json:"roomFacilities"`
}

type Language string

const (
	LanguageTai Language = "TAI"
	LanguageEng Language = "ENG"
)

var AllLanguage = []Language{
	LanguageTai,
	LanguageEng,
}

func (e Language) IsValid() bool {
	switch e {
	case LanguageTai, LanguageEng:
		return true
	}
	return false
}

func (e Language) String() string {
	return string(e)
}

func (e *Language) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Language(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Language", str)
	}
	return nil
}

func (e Language) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
